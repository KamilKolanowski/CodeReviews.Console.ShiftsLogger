// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShiftsLogger.KamilKolanowski.Models.Data;

#nullable disable

namespace ShiftsLogger.KamilKolanowski.Migrations
{
    [DbContext(typeof(ShiftsLoggerDb.ShiftsLoggerDbContext))]
    partial class ShiftsLoggerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("TCSA")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShiftWorker", b =>
                {
                    b.Property<int>("ShiftsShiftId")
                        .HasColumnType("int");

                    b.Property<int>("WorkersWorkerId")
                        .HasColumnType("int");

                    b.HasKey("ShiftsShiftId", "WorkersWorkerId");

                    b.HasIndex("WorkersWorkerId");

                    b.ToTable("ShiftWorker", "TCSA");
                });

            modelBuilder.Entity("ShiftsLogger.KamilKolanowski.Models.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShiftId"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShiftTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("WorkedHours")
                        .HasColumnType("float");

                    b.HasKey("ShiftId");

                    b.HasIndex("ShiftTypeId");

                    b.ToTable("Shifts", "TCSA");
                });

            modelBuilder.Entity("ShiftsLogger.KamilKolanowski.Models.ShiftType", b =>
                {
                    b.Property<int>("ShiftTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShiftTypeId"));

                    b.Property<string>("ShiftTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShiftTypeId");

                    b.ToTable("ShiftTypes", "TCSA");
                });

            modelBuilder.Entity("ShiftsLogger.KamilKolanowski.Models.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkerId");

                    b.ToTable("Workers", "TCSA");
                });

            modelBuilder.Entity("ShiftWorker", b =>
                {
                    b.HasOne("ShiftsLogger.KamilKolanowski.Models.Shift", null)
                        .WithMany()
                        .HasForeignKey("ShiftsShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftsLogger.KamilKolanowski.Models.Worker", null)
                        .WithMany()
                        .HasForeignKey("WorkersWorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShiftsLogger.KamilKolanowski.Models.Shift", b =>
                {
                    b.HasOne("ShiftsLogger.KamilKolanowski.Models.ShiftType", "ShiftType")
                        .WithMany("Shifts")
                        .HasForeignKey("ShiftTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShiftType");
                });

            modelBuilder.Entity("ShiftsLogger.KamilKolanowski.Models.ShiftType", b =>
                {
                    b.Navigation("Shifts");
                });
#pragma warning restore 612, 618
        }
    }
}
